import React from 'react';
import { ScanResultType } from '../types/scanner';
import { AlertCircle, ExternalLink, Code, ShieldAlert } from 'lucide-react';

interface VulnerabilityInfoProps {
  vulnerabilityId: string | null;
  results: ScanResultType[];
}

export const VulnerabilityInfo: React.FC<VulnerabilityInfoProps> = ({ 
  vulnerabilityId, 
  results 
}) => {
  const vulnerability = results.find(r => r.id === vulnerabilityId);
  
  if (!vulnerability) {
    return (
      <div className="bg-white/10 backdrop-blur-md rounded-lg shadow-lg border border-white/10 p-6">
        <p className="text-slate-400">Select a vulnerability to see details</p>
      </div>
    );
  }

  return (
    <div className="bg-white/10 backdrop-blur-md rounded-lg shadow-lg border border-white/10 p-6 sticky top-6">
      <div className="flex items-center justify-between mb-4">
        <h2 className="text-lg font-bold text-white">{vulnerability.title}</h2>
        <span className={`text-xs px-2 py-1 rounded ${getSeverityClass(vulnerability.severity)}`}>
          {vulnerability.severity.toUpperCase()}
        </span>
      </div>

      <div className="space-y-4">
        <div>
          <h3 className="text-sm font-semibold text-slate-300 mb-1 flex items-center gap-1">
            <ShieldAlert className="h-4 w-4 text-red-500" />
            OWASP Category
          </h3>
          <p className="text-sm bg-white/5 p-2 rounded border border-white/10 text-slate-300">
            {vulnerability.category}
          </p>
        </div>

        <div>
          <h3 className="text-sm font-semibold text-slate-300 mb-1 flex items-center gap-1">
            <AlertCircle className="h-4 w-4 text-orange-500" />
            Description
          </h3>
          <p className="text-sm text-slate-400">
            {vulnerability.description}
          </p>
        </div>

        <div>
          <h3 className="text-sm font-semibold text-slate-300 mb-1 flex items-center gap-1">
            <Code className="h-4 w-4 text-blue-500" />
            Vulnerable Code
          </h3>
          <div className="bg-slate-900/50 text-slate-300 p-3 rounded text-xs font-mono whitespace-pre overflow-x-auto border border-white/10">
            {vulnerability.code}
          </div>
          <p className="text-xs text-slate-500 mt-1">
            Line: {vulnerability.line}
          </p>
        </div>

        <div>
          <h3 className="text-sm font-semibold text-slate-300 mb-1">How to Fix</h3>
          <p className="text-sm text-slate-400">
            {vulnerability.remediation}
          </p>
        </div>

        <div>
          <h3 className="text-sm font-semibold text-slate-300 mb-1 flex items-center gap-1">
            <ExternalLink className="h-4 w-4 text-navy-500" />
            Learn More
          </h3>
          <div className="text-sm">
            <a 
              href={vulnerability.learnMoreUrl} 
              target="_blank" 
              rel="noopener noreferrer"
              className="text-red-400 hover:text-red-300 underline"
            >
              OWASP Documentation
            </a>
          </div>
        </div>
      </div>
    </div>
  );
};

const getSeverityClass = (severity: string) => {
  switch(severity) {
    case 'critical':
      return 'bg-red-500/20 text-red-400';
    case 'high':
      return 'bg-orange-500/20 text-orange-400';
    case 'medium':
      return 'bg-yellow-500/20 text-yellow-400';
    case 'low':
      return 'bg-blue-500/20 text-blue-400';
    case 'none':
      return 'bg-green-500/20 text-green-400';
    default:
      return 'bg-slate-500/20 text-slate-400';
  }
};